{"version":3,"sources":["components/ControlPanel.js","components/TextArea.js","components/AreaChart.js","components/CustomMessage.js","api.js","App.js","serviceWorker.js","index.js"],"names":["ControlPanel","_this$props","this","props","onHandleFileUploadInput","onHandleFileUploadButton","onHandleDropdownChange","onHandleRequestingPathButton","isNewFile","uploadingFile","requestingPath","filesUploaded","fileSelected","isImpatient","react_default","a","createElement","Fragment","Form","Field","Input","type","onChange","className","placeholder","defaultValue","disabled","Button","animated","fluid","loading","color","onClick","Content","hidden","Icon","name","visible","Divider","Dropdown","selection","length","options","value","Message","compact","Component","TextArea","scrollToBottom","_this","messagesEnd","scrollIntoView","behavior","_this2","textAreaContent","style","float","clear","ref","el","AreaChart","data","paths","map","item","file","executionTime","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","CustomMessage","error","isError","onHandleErrorDismiss","header","list","onDismiss","apiUrl","uploadFile","_x","_uploadFile","apply","arguments","_callee","formData","regenerator_default","wrap","_context","prev","next","FormData","append","abrupt","axios","post","headers","Content-Type","stop","_callee2","_context2","get","params","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","newFile","bind","assertThisInitialized","event","preventDefault","setState","target","files","then","response","some","filename","push","text","toConsumableArray","concat","catch","message","_ref","_this3","timerID","setTimeout","_x2","_getPath","getPath","clearTimeout","pathUnfolded","result","path","content","key","join","pathLength","steepLength","objectSpread","Header","as","href","title","link","components_CustomMessage","components_TextArea","components_ControlPanel","components_AreaChart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oYA2FeA,mLA/EJ,IAAAC,EAYHC,KAAKC,MAVPC,EAFKH,EAELG,wBACAC,EAHKJ,EAGLI,yBACAC,EAJKL,EAILK,uBACAC,EALKN,EAKLM,6BACAC,EANKP,EAMLO,UACAC,EAPKR,EAOLQ,cACAC,EARKT,EAQLS,eACAC,EATKV,EASLU,cACAC,EAVKX,EAULW,aACAC,EAXKZ,EAWLY,YAGF,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,KACEL,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,KAAK,OACLC,SAAUlB,EACVmB,UAAU,gBACVC,YAAY,wBACZC,aAAa,GACbC,SAAUjB,KAGdK,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,KACEL,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,SAAS,WACTC,OAAK,EACLH,UAAWlB,GAAaC,EACxBqB,QAASrB,EACTsB,MAAM,OACNC,QAAS3B,GAETS,EAAAC,EAAAC,cAACW,EAAA,EAAOM,QAAR,CAAgBC,QAAM,GACpBpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMC,KAAK,YAEbtB,EAAAC,EAAAC,cAACW,EAAA,EAAOM,QAAR,CAAgBI,SAAO,GAAvB,iBAGJvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MACAxB,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,KACEL,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEjB,SAAUhB,EACVkB,YAAY,oCACZK,OAAK,EACLW,WAAS,EACTd,UAAWf,GAAiBA,EAAc8B,QAAU,EACpDC,QAAS/B,EACTgC,MAAO/B,KAGXE,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,KACEL,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEE,OAAK,EACLE,MAAM,OACNL,UAAWd,GAAgBF,EAC3BoB,QAASpB,EACTsB,QAASzB,GALX,oBASAO,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACErB,UAAU,oBACVsB,SAAO,EACPd,MAAM,OACNG,QAASrB,GAJX,2DAlEiBiC,aCoBZC,6MA5BbC,eAAiB,WACfC,EAAKC,YAAYC,eAAe,CAAEC,SAAU,+FAI5ClD,KAAK8C,8DAIL9C,KAAK8C,kDAGE,IAAAK,EAAAnD,KACCoD,EAAoBpD,KAAKC,MAAzBmD,gBACR,OACExC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACZ+B,EACDxC,EAAAC,EAAAC,cAAA,OACEuC,MAAO,CAAEC,MAAO,OAAQC,MAAO,QAC/BC,IAAK,SAAAC,GACHN,EAAKH,YAAcS,aArBRb,qFC2CRc,mLA9BJ,IAGDC,EAFY3D,KAAKC,MAAf2D,MAEWC,IAAI,SAAAC,GACrB,MAAO,CACLC,KAAMD,EAAKpD,aACXsD,cAAeF,EAAKE,iBAIxB,OACEpD,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAQ,KACxCvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACET,KAAMA,EACNU,OAAQ,CAAEC,IAAK,GAAIC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,IAE9C7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAeC,gBAAgB,QAC/B/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOC,QAAQ,SACfjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,MACAlE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,MACAnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,MACApE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAM9D,KAAK,WAAW0D,QAAQ,gBAAgBK,OAAO,sBAvBzCtC,aCSTuC,mLAnBJ,IAAApF,EAC0CC,KAAKC,MAA9CmF,EADDrF,EACCqF,MAAOC,EADRtF,EACQsF,QAASC,EADjBvF,EACiBuF,qBACxB,OACED,IAEEzE,EAAAC,EAAAC,cAAA,OAAKO,UAAU,WACbT,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACE0C,MAAOC,EACPE,OAAQH,EAAMG,OACdC,KAAMJ,EAAMI,KACZC,UAAWH,MAIf,aAfoB1C,+BCDtB8C,EAAS,mDAER,SAAeC,EAAtBC,GAAA,OAAAC,EAAAC,MAAA9F,KAAA+F,sDAAO,SAAAC,EAA0BjC,GAA1B,IAAAkC,EAAA,OAAAC,EAAArF,EAAAsF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACCL,EAAW,IAAIM,UACZC,OAAO,OAAQzC,GAFnBqC,EAAAK,OAAA,SAIEC,IAAMC,KAAKjB,EAAS,eAAgBO,EAAU,CACnDW,QAAS,CACPC,eAAgB,0BANf,wBAAAT,EAAAU,SAAAd,EAAAhG,2EAWA,SAAA+G,EAAuBhD,GAAvB,OAAAmC,EAAArF,EAAAsF,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAP,OAAA,SACEC,IAAMO,IAAIvB,EAAS,YAAa,CACrCwB,OAAQ,CACNnD,WAHC,wBAAAiD,EAAAF,SAAAC,EAAA/G,kDC4NQmH,cA/Nb,SAAAA,EAAYlH,GAAO,IAAA8C,EAAA,OAAAqE,OAAAC,EAAA,EAAAD,CAAApH,KAAAmH,IACjBpE,EAAAqE,OAAAE,EAAA,EAAAF,CAAApH,KAAAoH,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAxH,KAAMC,KAEDwH,MAAQ,CACXC,QAAS,KACTnH,eAAe,EACfC,gBAAgB,EAChBoD,MAAO,GACPR,gBAAiB,GACjB3C,cAAe,GACfC,aAAc,KACdC,aAAa,EACb0E,SAAS,EACTD,MAAO,CACLG,OAAQ,GACRC,KAAM,KAIVzC,EAAK7C,wBAA0B6C,EAAK7C,wBAAwByH,KAA7BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAArE,KAC/BA,EAAK5C,yBAA2B4C,EAAK5C,yBAAyBwH,KAA9BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAArE,KAChCA,EAAK3C,uBAAyB2C,EAAK3C,uBAAuBuH,KAA5BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAArE,KAC9BA,EAAK1C,6BAA+B0C,EAAK1C,6BAA6BsH,KAAlCP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAArE,KAGpCA,EAAKuC,qBAAuBvC,EAAKuC,qBAAqBqC,KAA1BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAArE,KAzBXA,uFA4BK8E,GACtBA,EAAMC,iBACN9H,KAAK+H,SAAS,CACZL,QAASG,EAAMG,OAAOC,MAAM,8FAIDJ,8EAC7BA,EAAMC,iBACN9H,KAAK+H,SAAS,CAAExH,eAAe,IAE/BoF,EAAW3F,KAAKyH,MAAMC,SACnBQ,KAAK,SAAAC,GACJ,IAAMT,EAAU,GAEbvE,EAAKsE,MAAMhH,cAAc2H,KACxB,SAAArE,GAAI,OAAIA,EAAKtB,QAAU0F,EAASxE,KAAKI,KAAKsE,YAG5CX,EAAQY,KAAK,CACXC,KAAMJ,EAASxE,KAAKI,KAAKsE,SACzB5F,MAAO0F,EAASxE,KAAKI,KAAKsE,WAI9BlF,EAAK4E,SAAS,SAACN,EAAOxH,GAAR,MAAmB,CAC/BM,eAAe,EACfE,cAAc2G,OAAAoB,EAAA,EAAApB,CAAKK,EAAMhH,eAAZgI,OAA8Bf,QAG9CgB,MAAM,SAAAtD,GACLjC,EAAK4E,SAAS,CACZxH,eAAe,EACf8E,SAAS,EACTD,MAAO,CACLG,OAAQ,0CACRC,KAAMJ,EAAM+C,SAASxE,KAAKgF,QACtB,CAACvD,EAAM+C,SAASxE,KAAKgF,SACrB,wJAMOd,GACnBA,EAAMC,iBACN9H,KAAK+H,SAAS,CACZ1C,SAAS,EACTD,MAAO,CACLG,OAAQ,GACRC,KAAM,qDAKWqC,KAAkB,IAATpF,EAASmG,EAATnG,MAC9BoF,EAAMC,iBACN9H,KAAK+H,SAAS,CAAErH,aAAc+B,yDAGHoF,GAAO,IAAAgB,EAAA7I,KAClC6H,EAAMC,iBACN9H,KAAK+H,SAAS,CAAEvH,gBAAgB,IAEhCR,KAAK8I,QAAUC,WAAW,WACxBF,EAAKd,SAAS,CAAEpH,aAAa,KAC5B,KD3FA,SAAPqI,GAAA,OAAAC,EAAAnD,MAAA9F,KAAA+F,WC6FImD,CAAQlJ,KAAKyH,MAAM/G,cAChBwH,KAAK,SAAAC,GACJgB,aAAaN,EAAKC,SAElB,IAAMM,EAAejB,EAASxE,KAAK0F,OAAOC,KAAKzF,IAAI,SAAAC,GAAI,OAAIA,EAAKrB,QAE1D8G,EACJ3I,EAAAC,EAAAC,cAAA,OAAK0I,IAAKX,EAAKpB,MAAM7D,MAAMrB,QACzB3B,EAAAC,EAAAC,cAAA,KAAGO,UAAU,aACXT,EAAAC,EAAAC,cAAA,qBADF,IACsB+H,EAAKpB,MAAM/G,cAEjCE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,6BADF,IAC8BsI,EAAaK,KAAK,MAEhD7I,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBADF,IACwBqH,EAASxE,KAAK0F,OAAOK,YAE7C9I,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+BADF,IACgCqH,EAASxE,KAAK0F,OAAOM,aAErD/I,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+BADF,IACgCqH,EAASxE,KAAKK,cAD9C,YAON6E,EAAKd,SAAS,SAACN,EAAOxH,GAAR,MAAmB,CAC/BO,gBAAgB,EAChBoD,MAAMwD,OAAAoB,EAAA,EAAApB,CACDK,EAAM7D,OADN6E,OAAA,CAAArB,OAAAwC,EAAA,EAAAxC,CAAA,GAEEe,EAASxE,KAFX,CAEiBI,KAAM0D,EAAM/G,iBAElC0C,gBAAgBgE,OAAAoB,EAAA,EAAApB,CAAKK,EAAMrE,iBAAZqF,OAAA,CAA6Bc,IAC5C5I,aAAa,OAGhB+H,MAAM,SAAAtD,GACLyD,EAAKd,SAAS,CACZpH,aAAa,EACbH,gBAAgB,EAChB6E,SAAS,EACTD,MAAO,CACLG,OAAQ,6CACRC,KAAMJ,EAAM+C,SAASxE,KAAKgF,QACtB,CAACvD,EAAM+C,SAASxE,KAAKgF,SACrB,uDAOZQ,aAAanJ,KAAK8I,0CAIlB,OACElI,EAAAC,EAAAC,cAAA,OAAKO,UAAU,iBACbT,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAQC,GAAG,MAAX,uBACuB,IACrBlJ,EAAAC,EAAAC,cAAA,mBACO,IACLF,EAAAC,EAAAC,cAAA,KACEkH,OAAO,SACP+B,KAAK,oCACLC,MAAM,iBAHR,uBAQFpJ,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACZ,IACDT,EAAAC,EAAAC,cAAA,KACEkH,OAAO,SACP+B,KAAK,iCACLC,MAAM,mBAENpJ,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMgI,MAAI,EAAC/H,KAAK,YAElBtB,EAAAC,EAAAC,cAAA,KACEkH,OAAO,SACP+B,KAAK,kCACLC,MAAM,mBAENpJ,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMgI,MAAI,EAAC/H,KAAK,eAItBtB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,4BACbT,EAAAC,EAAAC,cAACoJ,EAAD,CACE5E,qBAAsBtF,KAAKsF,qBAC3BD,QAASrF,KAAKyH,MAAMpC,QACpBD,MAAOpF,KAAKyH,MAAMrC,SAGtBxE,EAAAC,EAAAC,cAAA,OAAKO,UAAU,yCACbT,EAAAC,EAAAC,cAACqJ,EAAD,CACEvG,MAAO5D,KAAKyH,MAAM7D,MAClBR,gBAAiBpD,KAAKyH,MAAMrE,mBAGhCxC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,8CACbT,EAAAC,EAAAC,cAACsJ,EAAD,CACElK,wBAAyBF,KAAKE,wBAC9BC,yBAA0BH,KAAKG,yBAC/BC,uBAAwBJ,KAAKI,uBAC7BC,6BAA8BL,KAAKK,6BACnCC,UAAWN,KAAKyH,MAAMC,QACtBnH,cAAeP,KAAKyH,MAAMlH,cAC1BC,eAAgBR,KAAKyH,MAAMjH,eAC3BC,cAAeT,KAAKyH,MAAMhH,cAC1BC,aAAcV,KAAKyH,MAAM/G,aACzBC,YAAaX,KAAKyH,MAAM9G,eAG5BC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,sCACbT,EAAAC,EAAAC,cAACuJ,EAAD,CAAWzG,MAAO5D,KAAKyH,MAAM7D,kBAxNvBhB,aCCE0H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhK,EAAAC,EAAAC,cAAC+J,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhD,KAAK,SAAAiD,GACjCA,EAAaC","file":"static/js/main.4e3e3906.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Input,\r\n  Dropdown,\r\n  Form,\r\n  Button,\r\n  Icon,\r\n  Divider,\r\n  Message,\r\n} from 'semantic-ui-react';\r\n\r\nclass ControlPanel extends Component {\r\n  render() {\r\n    const {\r\n      onHandleFileUploadInput,\r\n      onHandleFileUploadButton,\r\n      onHandleDropdownChange,\r\n      onHandleRequestingPathButton,\r\n      isNewFile,\r\n      uploadingFile,\r\n      requestingPath,\r\n      filesUploaded,\r\n      fileSelected,\r\n      isImpatient,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Form.Field>\r\n          <label>1. Upload a new file:</label>\r\n          <Input\r\n            type=\"file\"\r\n            onChange={onHandleFileUploadInput}\r\n            className=\"upload-button\"\r\n            placeholder=\"Upload a text file...\"\r\n            defaultValue=\"\"\r\n            disabled={uploadingFile}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Button\r\n            animated=\"vertical\"\r\n            fluid\r\n            disabled={!isNewFile || uploadingFile}\r\n            loading={uploadingFile}\r\n            color=\"teal\"\r\n            onClick={onHandleFileUploadButton}\r\n          >\r\n            <Button.Content hidden>\r\n              <Icon name=\"upload\" />\r\n            </Button.Content>\r\n            <Button.Content visible>Upload File</Button.Content>\r\n          </Button>\r\n        </Form.Field>\r\n        <Divider />\r\n        <Form.Field>\r\n          <label>2. Select a file:</label>\r\n          <Dropdown\r\n            onChange={onHandleDropdownChange}\r\n            placeholder=\"Select a file already uplaoded...\"\r\n            fluid\r\n            selection\r\n            disabled={!filesUploaded || filesUploaded.length <= 0}\r\n            options={filesUploaded}\r\n            value={fileSelected}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Button\r\n            fluid\r\n            color=\"teal\"\r\n            disabled={!fileSelected || requestingPath}\r\n            loading={requestingPath}\r\n            onClick={onHandleRequestingPathButton}\r\n          >\r\n            Get Longest Path\r\n          </Button>\r\n          <Message\r\n            className=\"impatient-message\"\r\n            compact\r\n            color=\"teal\"\r\n            hidden={!isImpatient}\r\n          >\r\n            Please be patient, the script is still running\r\n          </Message>\r\n        </Form.Field>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React, { Component } from 'react';\r\n\r\nclass TextArea extends Component {\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  render() {\r\n    const { textAreaContent } = this.props;\r\n    return (\r\n      <div className=\"textarea\">\r\n        {textAreaContent}\r\n        <div\r\n          style={{ float: 'left', clear: 'both' }}\r\n          ref={el => {\r\n            this.messagesEnd = el;\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextArea;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  BarChart,\r\n  LineChart,\r\n  Line,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nclass AreaChart extends Component {\r\n  render() {\r\n    const { paths } = this.props;\r\n\r\n    const data = paths.map(item => {\r\n      return {\r\n        file: item.fileSelected,\r\n        executionTime: item.executionTime,\r\n      };\r\n    });\r\n\r\n    return (\r\n      <div className=\"chart\">\r\n        <ResponsiveContainer width=\"100%\" height={500}>\r\n          <LineChart\r\n            data={data}\r\n            margin={{ top: 30, right: 5, left: 0, bottom: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"file\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"executionTime\" stroke=\"#00b5ad\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AreaChart;\r\n","import React, { Component } from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nclass CustomMessage extends Component {\r\n  render() {\r\n    const { error, isError, onHandleErrorDismiss } = this.props;\r\n    return (\r\n      isError &&\r\n      ((\r\n        <div className=\"message\">\r\n          <Message\r\n            error={isError}\r\n            header={error.header}\r\n            list={error.list}\r\n            onDismiss={onHandleErrorDismiss}\r\n          />\r\n        </div>\r\n      ) ||\r\n        null)\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomMessage;\r\n","import axios from 'axios';\r\n\r\nconst apiUrl = 'https://coding-challenge.mariolemesmedina.me/api';\r\n\r\nexport async function uploadFile(file) {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n\r\n  return axios.post(apiUrl + '/v1/matrixes', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n}\r\n\r\nexport async function getPath(file) {\r\n  return axios.get(apiUrl + '/v1/paths', {\r\n    params: {\r\n      file,\r\n    },\r\n  });\r\n}\r\n","import React, { Component } from 'react';\nimport { Icon, Header } from 'semantic-ui-react';\nimport ControlPanel from './components/ControlPanel';\nimport TextArea from './components/TextArea';\nimport AreaChart from './components/AreaChart';\nimport CustomMessage from './components/CustomMessage';\nimport { uploadFile, getPath } from './api';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newFile: null,\n      uploadingFile: false,\n      requestingPath: false,\n      paths: [],\n      textAreaContent: [],\n      filesUploaded: [],\n      fileSelected: null,\n      isImpatient: false,\n      isError: false,\n      error: {\n        header: '',\n        list: [],\n      },\n    };\n\n    this.onHandleFileUploadInput = this.onHandleFileUploadInput.bind(this);\n    this.onHandleFileUploadButton = this.onHandleFileUploadButton.bind(this);\n    this.onHandleDropdownChange = this.onHandleDropdownChange.bind(this);\n    this.onHandleRequestingPathButton = this.onHandleRequestingPathButton.bind(\n      this,\n    );\n    this.onHandleErrorDismiss = this.onHandleErrorDismiss.bind(this);\n  }\n\n  onHandleFileUploadInput(event) {\n    event.preventDefault();\n    this.setState({\n      newFile: event.target.files[0],\n    });\n  }\n\n  async onHandleFileUploadButton(event) {\n    event.preventDefault();\n    this.setState({ uploadingFile: true });\n\n    uploadFile(this.state.newFile)\n      .then(response => {\n        const newFile = [];\n        if (\n          !this.state.filesUploaded.some(\n            file => file.value === response.data.file.filename,\n          )\n        ) {\n          newFile.push({\n            text: response.data.file.filename,\n            value: response.data.file.filename,\n          });\n        }\n\n        this.setState((state, props) => ({\n          uploadingFile: false,\n          filesUploaded: [...state.filesUploaded, ...newFile],\n        }));\n      })\n      .catch(error => {\n        this.setState({\n          uploadingFile: false,\n          isError: true,\n          error: {\n            header: 'There was some error uploading the file',\n            list: error.response.data.message\n              ? [error.response.data.message]\n              : [],\n          },\n        });\n      });\n  }\n\n  onHandleErrorDismiss(event) {\n    event.preventDefault();\n    this.setState({\n      isError: false,\n      error: {\n        header: '',\n        list: [],\n      },\n    });\n  }\n\n  onHandleDropdownChange(event, { value }) {\n    event.preventDefault();\n    this.setState({ fileSelected: value });\n  }\n\n  onHandleRequestingPathButton(event) {\n    event.preventDefault();\n    this.setState({ requestingPath: true });\n\n    this.timerID = setTimeout(() => {\n      this.setState({ isImpatient: true });\n    }, 5000);\n\n    getPath(this.state.fileSelected)\n      .then(response => {\n        clearTimeout(this.timerID);\n\n        const pathUnfolded = response.data.result.path.map(item => item.value);\n\n        const content = (\n          <div key={this.state.paths.length}>\n            <p className=\"file-name\">\n              <span>File:</span> {this.state.fileSelected}\n            </p>\n            <ul>\n              <li>\n                <span>Longest path:</span> {pathUnfolded.join(',')}\n              </li>\n              <li>\n                <span>Length:</span> {response.data.result.pathLength}\n              </li>\n              <li>\n                <span>Steep gradient:</span> {response.data.result.steepLength}\n              </li>\n              <li>\n                <span>Execution time:</span> {response.data.executionTime} secs.\n              </li>\n            </ul>\n          </div>\n        );\n\n        this.setState((state, props) => ({\n          requestingPath: false,\n          paths: [\n            ...state.paths,\n            { ...response.data, file: state.fileSelected },\n          ],\n          textAreaContent: [...state.textAreaContent, content],\n          isImpatient: false,\n        }));\n      })\n      .catch(error => {\n        this.setState({\n          isImpatient: false,\n          requestingPath: false,\n          isError: true,\n          error: {\n            header: 'There was some error obtaining the results',\n            list: error.response.data.message\n              ? [error.response.data.message]\n              : [],\n          },\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timerID);\n  }\n\n  render() {\n    return (\n      <div className=\"app container\">\n        <Header as=\"h1\">\n          Coding Challenge App{' '}\n          <span>\n            - by{' '}\n            <a\n              target=\"_blank\"\n              href=\"mailto:mariolemesmedina@gmail.com\"\n              title=\"Email address\"\n            >\n              Mario Lemes Medina\n            </a>\n          </span>\n          <div className=\"icons\">\n            {' '}\n            <a\n              target=\"_blank\"\n              href=\"https://github.com/mario-lemes\"\n              title=\"Git Hub Account\"\n            >\n              <Icon link name=\"github\" />\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://twitter.com/mario_lemes\"\n              title=\"Twitter Account\"\n            >\n              <Icon link name=\"twitter\" />\n            </a>\n          </div>\n        </Header>\n        <div className=\"body row\">\n          <div className=\"message-container col-12\">\n            <CustomMessage\n              onHandleErrorDismiss={this.onHandleErrorDismiss}\n              isError={this.state.isError}\n              error={this.state.error}\n            />\n          </div>\n          <div className=\"textarea-container col-xs-12 col-md-8\">\n            <TextArea\n              paths={this.state.paths}\n              textAreaContent={this.state.textAreaContent}\n            />\n          </div>\n          <div className=\"control-panel-container col-xs-12 col-md-4\">\n            <ControlPanel\n              onHandleFileUploadInput={this.onHandleFileUploadInput}\n              onHandleFileUploadButton={this.onHandleFileUploadButton}\n              onHandleDropdownChange={this.onHandleDropdownChange}\n              onHandleRequestingPathButton={this.onHandleRequestingPathButton}\n              isNewFile={this.state.newFile}\n              uploadingFile={this.state.uploadingFile}\n              requestingPath={this.state.requestingPath}\n              filesUploaded={this.state.filesUploaded}\n              fileSelected={this.state.fileSelected}\n              isImpatient={this.state.isImpatient}\n            />\n          </div>\n          <div className=\"chart-container col-xs-12 col-md-8\">\n            <AreaChart paths={this.state.paths} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}